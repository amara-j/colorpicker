[{"/Users/amara/Documents/RC/color-picker/src/index.js":"1","/Users/amara/Documents/RC/color-picker/src/reportWebVitals.js":"2","/Users/amara/Documents/RC/color-picker/src/App.js":"3","/Users/amara/Documents/RC/color-picker/src/ColorBlock.js":"4","/Users/amara/Documents/RC/color-picker/src/ColorBlockContainer.js":"5","/Users/amara/Documents/colorpicker/src/index.js":"6","/Users/amara/Documents/colorpicker/src/App.js":"7","/Users/amara/Documents/colorpicker/src/reportWebVitals.js":"8","/Users/amara/Documents/colorpicker/src/ColorBlockContainer.js":"9","/Users/amara/Documents/colorpicker/src/ColorBlock.js":"10"},{"size":500,"mtime":1611865954748,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611765082395,"results":"13","hashOfConfig":"12"},{"size":186,"mtime":1611952964636,"results":"14","hashOfConfig":"12"},{"size":1419,"mtime":1611952742818,"results":"15","hashOfConfig":"12"},{"size":1878,"mtime":1611952965741,"results":"16","hashOfConfig":"12"},{"size":500,"mtime":1623344468047,"results":"17","hashOfConfig":"18"},{"size":186,"mtime":1623344468027,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1623344468047,"results":"20","hashOfConfig":"18"},{"size":1878,"mtime":1623344468028,"results":"21","hashOfConfig":"18"},{"size":1419,"mtime":1623344468028,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"tyssjz",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1pmq3q0",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amara/Documents/RC/color-picker/src/index.js",[],["46","47"],"/Users/amara/Documents/RC/color-picker/src/reportWebVitals.js",[],"/Users/amara/Documents/RC/color-picker/src/App.js",[],"/Users/amara/Documents/RC/color-picker/src/ColorBlock.js",[],"/Users/amara/Documents/RC/color-picker/src/ColorBlockContainer.js",["48"],"import { React, useState, useEffect } from \"react\";\nimport ColorBlock from \"./ColorBlock.js\";\n\nconst ColorBlockContainer = () => {\n  const numBlocks = 5;\n\n  const [blockPinState, updatePin] = useState(Array(numBlocks).fill(false));\n\n  const randomizeColor = () => {\n    const randomRed = Math.floor(255 * Math.random());\n    const randomGreen = Math.floor(255 * Math.random());\n    const randomBlue = Math.floor(255 * Math.random());\n    const randomRGB = [randomRed, randomGreen, randomBlue];\n    return randomRGB;\n  };\n\n  const [colors, updateColors] = useState(\n    blockPinState.map(() => randomizeColor())\n  );\n\n  const handleKeyDown = (e) => {\n    if (e.code === \"Space\") {\n      const updatedColors = colors.map((color, i) =>\n        blockPinState[i] ? color : randomizeColor()\n      );\n      updateColors(updatedColors);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [handleKeyDown]);\n\n  const rgbToHex = (rgbArray) => {\n    let hex = \"\";\n    rgbArray.forEach((element) => {\n      const elementString = element.toString(16);\n      var hexComponent =\n        elementString.length === 1 ? \"0\" + elementString : elementString;\n      hex += hexComponent;\n    });\n    return hex;\n  };\n\n  const setBlockPinned = (index, isPinned) => {\n    let newBlockPinState = [...blockPinState];\n    newBlockPinState[index] = isPinned;\n    updatePin(newBlockPinState);\n  };\n\n  return (\n    <div id=\"BlockContainer\">\n      {colors.map((color, i) => {\n        return (\n          <ColorBlock\n            key={i}\n            id={i}\n            isPinned={blockPinState[i]}\n            onChange={setBlockPinned}\n            color={colors[i]}\n            colorHex={rgbToHex(colors[i])}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ColorBlockContainer;\n","/Users/amara/Documents/colorpicker/src/index.js",[],["49","50"],"/Users/amara/Documents/colorpicker/src/App.js",[],"/Users/amara/Documents/colorpicker/src/reportWebVitals.js",[],"/Users/amara/Documents/colorpicker/src/ColorBlockContainer.js",["51"],"/Users/amara/Documents/colorpicker/src/ColorBlock.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":21,"column":9,"nodeType":"58","endLine":28,"endColumn":4},{"ruleId":"52","replacedBy":"59"},{"ruleId":"54","replacedBy":"60"},{"ruleId":"56","severity":1,"message":"57","line":21,"column":9,"nodeType":"58","endLine":28,"endColumn":4},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"react-hooks/exhaustive-deps","The 'handleKeyDown' function makes the dependencies of useEffect Hook (at line 33) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleKeyDown' in its own useCallback() Hook.","VariableDeclarator",["61"],["62"],"no-global-assign","no-unsafe-negation"]